// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Envelope.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace uTrans.Proto {

  /// <summary>Holder for reflection information generated from Envelope.proto</summary>
  public static partial class EnvelopeReflection {

    #region Descriptor
    /// <summary>File descriptor for Envelope.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EnvelopeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5FbnZlbG9wZS5wcm90bxIKdXRyYW5zY2FsYyKYAgoIRW52ZWxvcGUSHgoE",
            "dHlwZRgBIAEoDjIQLnV0cmFuc2NhbGMuVHlwZRIjCgdwcmVzZXRzGAIgAygL",
            "MhIudXRyYW5zY2FsYy5QcmVzZXQSNAoQcHJlc2V0X21hdGVyaWFscxgDIAMo",
            "CzIaLnV0cmFuc2NhbGMuUHJlc2V0TWF0ZXJpYWwSLAoMYmFzZV9vYmplY3Rz",
            "GAQgAygLMhYudXRyYW5zY2FsYy5CYXNlT2JqZWN0EicKCW1hdGVyaWFscxgF",
            "IAMoCzIULnV0cmFuc2NhbGMuTWF0ZXJpYWwSOgoScmVxdWlyZWRfbWF0ZXJp",
            "YWxzGAYgAygLMh4udXRyYW5zY2FsYy5CYXNlT2JqZWN0TWF0ZXJpYWwihgEK",
            "B1JlcXVlc3QSHgoEdHlwZRgBIAEoDjIQLnV0cmFuc2NhbGMuVHlwZRIxCglw",
            "cmVzZXRfaWQYAiABKAsyHi51dHJhbnNjYWxjLlJlcXVlc3QuT3B0aW9uYWxJ",
            "ZBooCgpPcHRpb25hbElkEg4KBmlzX3NldBgBIAEoCBIKCgJpZBgCIAEoAyIi",
            "CgZQcmVzZXQSCgoCaWQYASABKAMSDAoEbmFtZRgCIAEoCSI0Cg5QcmVzZXRN",
            "YXRlcmlhbBITCgttYXRlcmlhbF9pZBgBIAEoAxINCgVwcmljZRgCIAEoBSJC",
            "CghNYXRlcmlhbBIKCgJpZBgBIAEoAxIMCgRuYW1lGAIgASgJEgwKBHVuaXQY",
            "AyABKAkSDgoGaW5jb21lGAQgASgIIlYKCkJhc2VPYmplY3QSCgoCaWQYASAB",
            "KAMSDAoEbmFtZRgCIAEoCRIMCgR0eXBlGAMgASgFEg8KB21pblNpemUYBCAB",
            "KAUSDwoHbWF4U2l6ZRgFIAEoBSJSChJCYXNlT2JqZWN0TWF0ZXJpYWwSEwoL",
            "bWF0ZXJpYWxfaWQYASABKAMSDgoGYW1vdW50GAIgASgFEhcKD29uX2V4cGxv",
            "aXRhdGlvbhgDIAEoCCIkCgVFcnJvchIKCgJpZBgBIAEoAxIPCgdtZXNzYWdl",
            "GAIgASgJKosBCgRUeXBlEgsKB3Vua25vd24QABIPCgtsaXN0UHJlc2V0cxAB",
            "EhYKEmdldFByZXNldE1hdGVyaWFscxACEhMKD2xpc3RCYXNlT2JqZWN0cxAD",
            "EiUKIWdldFJlcXVpcmVkTWF0ZXJpYWxzRm9yQmFzZU9iamVjdBAEEhEKDWxp",
            "c3RNYXRlcmlhbHMQBUI4Ch9jb20uZ2l0aHViLnV0cmFuc25ldC51dHJhbnNj",
            "YWxjQgZQcm90b3OqAgx1VHJhbnMuUHJvdG9iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::uTrans.Proto.Type), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::uTrans.Proto.Envelope), global::uTrans.Proto.Envelope.Parser, new[]{ "Type", "Presets", "PresetMaterials", "BaseObjects", "Materials", "RequiredMaterials" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::uTrans.Proto.Request), global::uTrans.Proto.Request.Parser, new[]{ "Type", "PresetId" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::uTrans.Proto.Request.Types.OptionalId), global::uTrans.Proto.Request.Types.OptionalId.Parser, new[]{ "IsSet", "Id" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::uTrans.Proto.Preset), global::uTrans.Proto.Preset.Parser, new[]{ "Id", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::uTrans.Proto.PresetMaterial), global::uTrans.Proto.PresetMaterial.Parser, new[]{ "MaterialId", "Price" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::uTrans.Proto.Material), global::uTrans.Proto.Material.Parser, new[]{ "Id", "Name", "Unit", "Income" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::uTrans.Proto.BaseObject), global::uTrans.Proto.BaseObject.Parser, new[]{ "Id", "Name", "Type", "MinSize", "MaxSize" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::uTrans.Proto.BaseObjectMaterial), global::uTrans.Proto.BaseObjectMaterial.Parser, new[]{ "MaterialId", "Amount", "OnExploitation" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::uTrans.Proto.Error), global::uTrans.Proto.Error.Parser, new[]{ "Id", "Message" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum Type {
    [pbr::OriginalName("unknown")] Unknown = 0,
    [pbr::OriginalName("listPresets")] ListPresets = 1,
    [pbr::OriginalName("getPresetMaterials")] GetPresetMaterials = 2,
    [pbr::OriginalName("listBaseObjects")] ListBaseObjects = 3,
    [pbr::OriginalName("getRequiredMaterialsForBaseObject")] GetRequiredMaterialsForBaseObject = 4,
    [pbr::OriginalName("listMaterials")] ListMaterials = 5,
  }

  #endregion

  #region Messages
  public sealed partial class Envelope : pb::IMessage<Envelope> {
    private static readonly pb::MessageParser<Envelope> _parser = new pb::MessageParser<Envelope>(() => new Envelope());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Envelope> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::uTrans.Proto.EnvelopeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Envelope() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Envelope(Envelope other) : this() {
      type_ = other.type_;
      presets_ = other.presets_.Clone();
      presetMaterials_ = other.presetMaterials_.Clone();
      baseObjects_ = other.baseObjects_.Clone();
      materials_ = other.materials_.Clone();
      requiredMaterials_ = other.requiredMaterials_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Envelope Clone() {
      return new Envelope(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::uTrans.Proto.Type type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::uTrans.Proto.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "presets" field.</summary>
    public const int PresetsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::uTrans.Proto.Preset> _repeated_presets_codec
        = pb::FieldCodec.ForMessage(18, global::uTrans.Proto.Preset.Parser);
    private readonly pbc::RepeatedField<global::uTrans.Proto.Preset> presets_ = new pbc::RepeatedField<global::uTrans.Proto.Preset>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::uTrans.Proto.Preset> Presets {
      get { return presets_; }
    }

    /// <summary>Field number for the "preset_materials" field.</summary>
    public const int PresetMaterialsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::uTrans.Proto.PresetMaterial> _repeated_presetMaterials_codec
        = pb::FieldCodec.ForMessage(26, global::uTrans.Proto.PresetMaterial.Parser);
    private readonly pbc::RepeatedField<global::uTrans.Proto.PresetMaterial> presetMaterials_ = new pbc::RepeatedField<global::uTrans.Proto.PresetMaterial>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::uTrans.Proto.PresetMaterial> PresetMaterials {
      get { return presetMaterials_; }
    }

    /// <summary>Field number for the "base_objects" field.</summary>
    public const int BaseObjectsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::uTrans.Proto.BaseObject> _repeated_baseObjects_codec
        = pb::FieldCodec.ForMessage(34, global::uTrans.Proto.BaseObject.Parser);
    private readonly pbc::RepeatedField<global::uTrans.Proto.BaseObject> baseObjects_ = new pbc::RepeatedField<global::uTrans.Proto.BaseObject>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::uTrans.Proto.BaseObject> BaseObjects {
      get { return baseObjects_; }
    }

    /// <summary>Field number for the "materials" field.</summary>
    public const int MaterialsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::uTrans.Proto.Material> _repeated_materials_codec
        = pb::FieldCodec.ForMessage(42, global::uTrans.Proto.Material.Parser);
    private readonly pbc::RepeatedField<global::uTrans.Proto.Material> materials_ = new pbc::RepeatedField<global::uTrans.Proto.Material>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::uTrans.Proto.Material> Materials {
      get { return materials_; }
    }

    /// <summary>Field number for the "required_materials" field.</summary>
    public const int RequiredMaterialsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::uTrans.Proto.BaseObjectMaterial> _repeated_requiredMaterials_codec
        = pb::FieldCodec.ForMessage(50, global::uTrans.Proto.BaseObjectMaterial.Parser);
    private readonly pbc::RepeatedField<global::uTrans.Proto.BaseObjectMaterial> requiredMaterials_ = new pbc::RepeatedField<global::uTrans.Proto.BaseObjectMaterial>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::uTrans.Proto.BaseObjectMaterial> RequiredMaterials {
      get { return requiredMaterials_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Envelope);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Envelope other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if(!presets_.Equals(other.presets_)) return false;
      if(!presetMaterials_.Equals(other.presetMaterials_)) return false;
      if(!baseObjects_.Equals(other.baseObjects_)) return false;
      if(!materials_.Equals(other.materials_)) return false;
      if(!requiredMaterials_.Equals(other.requiredMaterials_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      hash ^= presets_.GetHashCode();
      hash ^= presetMaterials_.GetHashCode();
      hash ^= baseObjects_.GetHashCode();
      hash ^= materials_.GetHashCode();
      hash ^= requiredMaterials_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      presets_.WriteTo(output, _repeated_presets_codec);
      presetMaterials_.WriteTo(output, _repeated_presetMaterials_codec);
      baseObjects_.WriteTo(output, _repeated_baseObjects_codec);
      materials_.WriteTo(output, _repeated_materials_codec);
      requiredMaterials_.WriteTo(output, _repeated_requiredMaterials_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      size += presets_.CalculateSize(_repeated_presets_codec);
      size += presetMaterials_.CalculateSize(_repeated_presetMaterials_codec);
      size += baseObjects_.CalculateSize(_repeated_baseObjects_codec);
      size += materials_.CalculateSize(_repeated_materials_codec);
      size += requiredMaterials_.CalculateSize(_repeated_requiredMaterials_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Envelope other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      presets_.Add(other.presets_);
      presetMaterials_.Add(other.presetMaterials_);
      baseObjects_.Add(other.baseObjects_);
      materials_.Add(other.materials_);
      requiredMaterials_.Add(other.requiredMaterials_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            type_ = (global::uTrans.Proto.Type) input.ReadEnum();
            break;
          }
          case 18: {
            presets_.AddEntriesFrom(input, _repeated_presets_codec);
            break;
          }
          case 26: {
            presetMaterials_.AddEntriesFrom(input, _repeated_presetMaterials_codec);
            break;
          }
          case 34: {
            baseObjects_.AddEntriesFrom(input, _repeated_baseObjects_codec);
            break;
          }
          case 42: {
            materials_.AddEntriesFrom(input, _repeated_materials_codec);
            break;
          }
          case 50: {
            requiredMaterials_.AddEntriesFrom(input, _repeated_requiredMaterials_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Request : pb::IMessage<Request> {
    private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::uTrans.Proto.EnvelopeReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request(Request other) : this() {
      type_ = other.type_;
      PresetId = other.presetId_ != null ? other.PresetId.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request Clone() {
      return new Request(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::uTrans.Proto.Type type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::uTrans.Proto.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "preset_id" field.</summary>
    public const int PresetIdFieldNumber = 2;
    private global::uTrans.Proto.Request.Types.OptionalId presetId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::uTrans.Proto.Request.Types.OptionalId PresetId {
      get { return presetId_; }
      set {
        presetId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(PresetId, other.PresetId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (presetId_ != null) hash ^= PresetId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (presetId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PresetId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (presetId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PresetId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Request other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.presetId_ != null) {
        if (presetId_ == null) {
          presetId_ = new global::uTrans.Proto.Request.Types.OptionalId();
        }
        PresetId.MergeFrom(other.PresetId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            type_ = (global::uTrans.Proto.Type) input.ReadEnum();
            break;
          }
          case 18: {
            if (presetId_ == null) {
              presetId_ = new global::uTrans.Proto.Request.Types.OptionalId();
            }
            input.ReadMessage(presetId_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Request message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class OptionalId : pb::IMessage<OptionalId> {
        private static readonly pb::MessageParser<OptionalId> _parser = new pb::MessageParser<OptionalId>(() => new OptionalId());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<OptionalId> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::uTrans.Proto.Request.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OptionalId() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OptionalId(OptionalId other) : this() {
          isSet_ = other.isSet_;
          id_ = other.id_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OptionalId Clone() {
          return new OptionalId(this);
        }

        /// <summary>Field number for the "is_set" field.</summary>
        public const int IsSetFieldNumber = 1;
        private bool isSet_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsSet {
          get { return isSet_; }
          set {
            isSet_ = value;
          }
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 2;
        private long id_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Id {
          get { return id_; }
          set {
            id_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as OptionalId);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(OptionalId other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (IsSet != other.IsSet) return false;
          if (Id != other.Id) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (IsSet != false) hash ^= IsSet.GetHashCode();
          if (Id != 0L) hash ^= Id.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (IsSet != false) {
            output.WriteRawTag(8);
            output.WriteBool(IsSet);
          }
          if (Id != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(Id);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (IsSet != false) {
            size += 1 + 1;
          }
          if (Id != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(OptionalId other) {
          if (other == null) {
            return;
          }
          if (other.IsSet != false) {
            IsSet = other.IsSet;
          }
          if (other.Id != 0L) {
            Id = other.Id;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                IsSet = input.ReadBool();
                break;
              }
              case 16: {
                Id = input.ReadInt64();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class Preset : pb::IMessage<Preset> {
    private static readonly pb::MessageParser<Preset> _parser = new pb::MessageParser<Preset>(() => new Preset());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Preset> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::uTrans.Proto.EnvelopeReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Preset() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Preset(Preset other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Preset Clone() {
      return new Preset(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Preset);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Preset other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Preset other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PresetMaterial : pb::IMessage<PresetMaterial> {
    private static readonly pb::MessageParser<PresetMaterial> _parser = new pb::MessageParser<PresetMaterial>(() => new PresetMaterial());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PresetMaterial> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::uTrans.Proto.EnvelopeReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PresetMaterial() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PresetMaterial(PresetMaterial other) : this() {
      materialId_ = other.materialId_;
      price_ = other.price_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PresetMaterial Clone() {
      return new PresetMaterial(this);
    }

    /// <summary>Field number for the "material_id" field.</summary>
    public const int MaterialIdFieldNumber = 1;
    private long materialId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MaterialId {
      get { return materialId_; }
      set {
        materialId_ = value;
      }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 2;
    private int price_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PresetMaterial);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PresetMaterial other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MaterialId != other.MaterialId) return false;
      if (Price != other.Price) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MaterialId != 0L) hash ^= MaterialId.GetHashCode();
      if (Price != 0) hash ^= Price.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MaterialId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(MaterialId);
      }
      if (Price != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Price);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MaterialId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaterialId);
      }
      if (Price != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Price);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PresetMaterial other) {
      if (other == null) {
        return;
      }
      if (other.MaterialId != 0L) {
        MaterialId = other.MaterialId;
      }
      if (other.Price != 0) {
        Price = other.Price;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MaterialId = input.ReadInt64();
            break;
          }
          case 16: {
            Price = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Material : pb::IMessage<Material> {
    private static readonly pb::MessageParser<Material> _parser = new pb::MessageParser<Material>(() => new Material());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Material> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::uTrans.Proto.EnvelopeReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Material() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Material(Material other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      unit_ = other.unit_;
      income_ = other.income_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Material Clone() {
      return new Material(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unit" field.</summary>
    public const int UnitFieldNumber = 3;
    private string unit_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Unit {
      get { return unit_; }
      set {
        unit_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "income" field.</summary>
    public const int IncomeFieldNumber = 4;
    private bool income_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Income {
      get { return income_; }
      set {
        income_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Material);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Material other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Unit != other.Unit) return false;
      if (Income != other.Income) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Unit.Length != 0) hash ^= Unit.GetHashCode();
      if (Income != false) hash ^= Income.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Unit.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Unit);
      }
      if (Income != false) {
        output.WriteRawTag(32);
        output.WriteBool(Income);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Unit.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Unit);
      }
      if (Income != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Material other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Unit.Length != 0) {
        Unit = other.Unit;
      }
      if (other.Income != false) {
        Income = other.Income;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Unit = input.ReadString();
            break;
          }
          case 32: {
            Income = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BaseObject : pb::IMessage<BaseObject> {
    private static readonly pb::MessageParser<BaseObject> _parser = new pb::MessageParser<BaseObject>(() => new BaseObject());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BaseObject> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::uTrans.Proto.EnvelopeReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BaseObject() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BaseObject(BaseObject other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      type_ = other.type_;
      minSize_ = other.minSize_;
      maxSize_ = other.maxSize_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BaseObject Clone() {
      return new BaseObject(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "minSize" field.</summary>
    public const int MinSizeFieldNumber = 4;
    private int minSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MinSize {
      get { return minSize_; }
      set {
        minSize_ = value;
      }
    }

    /// <summary>Field number for the "maxSize" field.</summary>
    public const int MaxSizeFieldNumber = 5;
    private int maxSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxSize {
      get { return maxSize_; }
      set {
        maxSize_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BaseObject);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BaseObject other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      if (MinSize != other.MinSize) return false;
      if (MaxSize != other.MaxSize) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (MinSize != 0) hash ^= MinSize.GetHashCode();
      if (MaxSize != 0) hash ^= MaxSize.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Type != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Type);
      }
      if (MinSize != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MinSize);
      }
      if (MaxSize != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MaxSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (MinSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinSize);
      }
      if (MaxSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxSize);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BaseObject other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.MinSize != 0) {
        MinSize = other.MinSize;
      }
      if (other.MaxSize != 0) {
        MaxSize = other.MaxSize;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Type = input.ReadInt32();
            break;
          }
          case 32: {
            MinSize = input.ReadInt32();
            break;
          }
          case 40: {
            MaxSize = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BaseObjectMaterial : pb::IMessage<BaseObjectMaterial> {
    private static readonly pb::MessageParser<BaseObjectMaterial> _parser = new pb::MessageParser<BaseObjectMaterial>(() => new BaseObjectMaterial());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BaseObjectMaterial> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::uTrans.Proto.EnvelopeReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BaseObjectMaterial() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BaseObjectMaterial(BaseObjectMaterial other) : this() {
      materialId_ = other.materialId_;
      amount_ = other.amount_;
      onExploitation_ = other.onExploitation_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BaseObjectMaterial Clone() {
      return new BaseObjectMaterial(this);
    }

    /// <summary>Field number for the "material_id" field.</summary>
    public const int MaterialIdFieldNumber = 1;
    private long materialId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MaterialId {
      get { return materialId_; }
      set {
        materialId_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private int amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "on_exploitation" field.</summary>
    public const int OnExploitationFieldNumber = 3;
    private bool onExploitation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool OnExploitation {
      get { return onExploitation_; }
      set {
        onExploitation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BaseObjectMaterial);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BaseObjectMaterial other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MaterialId != other.MaterialId) return false;
      if (Amount != other.Amount) return false;
      if (OnExploitation != other.OnExploitation) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MaterialId != 0L) hash ^= MaterialId.GetHashCode();
      if (Amount != 0) hash ^= Amount.GetHashCode();
      if (OnExploitation != false) hash ^= OnExploitation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MaterialId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(MaterialId);
      }
      if (Amount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Amount);
      }
      if (OnExploitation != false) {
        output.WriteRawTag(24);
        output.WriteBool(OnExploitation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MaterialId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaterialId);
      }
      if (Amount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Amount);
      }
      if (OnExploitation != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BaseObjectMaterial other) {
      if (other == null) {
        return;
      }
      if (other.MaterialId != 0L) {
        MaterialId = other.MaterialId;
      }
      if (other.Amount != 0) {
        Amount = other.Amount;
      }
      if (other.OnExploitation != false) {
        OnExploitation = other.OnExploitation;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MaterialId = input.ReadInt64();
            break;
          }
          case 16: {
            Amount = input.ReadInt32();
            break;
          }
          case 24: {
            OnExploitation = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Error : pb::IMessage<Error> {
    private static readonly pb::MessageParser<Error> _parser = new pb::MessageParser<Error>(() => new Error());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Error> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::uTrans.Proto.EnvelopeReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Error() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Error(Error other) : this() {
      id_ = other.id_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Error Clone() {
      return new Error(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Error);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Error other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Error other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
